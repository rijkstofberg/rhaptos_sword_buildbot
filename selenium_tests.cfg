[buildout]
extends = empty_ds.cfg

# develop += src/testbed

parts += 
    seleniumrc
    seleniumrc-daemon
#    test-nose
    test-selenium

eggs += 
    zc.zdaemonrecipe
    pbp.recipe.noserunner
    selenium
    collective.recipe.seleniumrc


# Download the remote control and provide a script "seleniumrc" for
# starting nd stopping selenium.
[seleniumrc]
recipe=collective.recipe.seleniumrc

[seleniumrc-daemon]
recipe = zc.zdaemonrecipe
program = ${buildout:directory}/bin/seleniumrc


[test-nose]
recipe = pbp.recipe.noserunner
working-directoy = ${buildout:directory}/src/testbed
eggs = testbed

[test-selenium]
recipe = iw.recipe.cmd
on_install = true
on_update = true
cmds =
    ${buildout:directory}/bin/zdaemon -p 'Xvfb :0 -ac' start
    export DISPLAY=:0
    ${buildout:directory}/bin/seleniumrc-daemon start
    ${buildout:directory}/scripts/application start
    sleep 10
#    ${buildout:directory}/bin/test-nose --match="accounts|activateAccounts|content|data|lenses|[A-Z]*Test|test[A-Z].*" 
#    ${buildout:directory}/bin/test-nose all.py "{'url':'http://localhost:${instance:http-address}/${shared:portal-name}'}"
    cd ${buildout:directory}/src/testbed
    python all.py "{'url':'http://localhost:${instance:http-address}', 'sitename':'${shared:portal-name}'}"
    ${buildout:directory}/scripts/application stop
    ${buildout:directory}/bin/seleniumrc-daemon stop
    ${buildout:directory}/bin/zdaemon -p 'Xvfb :0 -ac' stop
