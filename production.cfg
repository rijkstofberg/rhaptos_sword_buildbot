[buildout]
extends = empty_ds.cfg

parts +=
    instance1
    instance2
    pcre
    haproxy-build
    haproxy-conf
    munin-client1
    munin-client2
    munin-node-config
    supervisor
    
zope-datadir = /data/zope
postgres-datadir = /data/postgresql
squid-proxy-port = 8000
#Needs to be plone because the full dataset refers to /plone
portal-name = plone

[downloads]
munin       = http://downloads.sourceforge.net/project/munin/munin%20stable/1.4.2/munin-1.4.2.tar.gz

[instance1]
<= instance
http-address = 8081

[instance2]
<= instance
http-address = 8082

[pcre]
# pcre is the perl regular expression module which is used by both nginx and haproxy
recipe = hexagonit.recipe.download
ignore-existing = true
url = ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.00.tar.gz
strip-top-level-dir = true

[haproxy-build]
# To install on MacOSX: sudo port install haproxy
recipe = plone.recipe.haproxy
url = http://haproxy.1wt.eu/download/1.4/src/haproxy-1.4.6.tar.gz
target=generic
pcre=1
extra_options=PCREDIR=${pcre:location}

[haproxy-conf]
recipe          = collective.recipe.template
input           = ${buildout:directory}/etc/templates/haproxy.conf.in
output          = ${buildout:directory}/etc/haproxy.conf
pidfile         = ${buildout:directory}/parts/haproxy-instance/haproxy.pid
maxconn         = 20000 
ulimit-n        = 40011
# user            = nateaune
# group           = nateaune

# Munin is a networked resource monitoring tool: http://munin.projects.linpro.no/
# See MacOSX installation instructions here: http://munin.projects.linpro.no/wiki/DarwinInstallation
# See Munin tutorial here: http://waste.mandragor.org/munin_tutorial/munin.html
# to start on bootup: sudo launchctl load -w /Library/LaunchDaemons/org.macports.munin-node.plist
# from the buildout directory:
# sudo bin/munin1 install /opt/local/etc/munin/plugins/ haivision client1
# sudo bin/munin2 install /opt/local/etc/munin/plugins/ haivision client2
# Then go to: http://localhost:8080/@@munin.zope.plugins/zopethreads
# See Linux installation instructions here: http://munin.projects.linpro.no/wiki/LinuxInstallation
# Munin on Ubuntu: http://github.com/jnstq/munin-nginx-ubuntu

[munin-client1]
# http://pypi.python.org/pypi/munin.zope
recipe = zc.recipe.egg
eggs = munin.zope
scripts = munin=munin1
arguments = http_address='${instance1:http-address}', user='zope'

[munin-client2]
# http://pypi.python.org/pypi/munin.zope
recipe = zc.recipe.egg
eggs = munin.zope
scripts = munin=munin2
arguments = http_address='${instance2:http-address}', user='zope'

[munin-node-config]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/templates/munin-node.conf.in
output = ${buildout:directory}/etc/munin-node.conf

[supervisor]
# http://pypi.python.org/pypi/collective.recipe.supervisor
recipe      = collective.recipe.supervisor
port        = 9001
user        = admin
password    = admin
logfile     = ${buildout:directory}/var/log/supervisord.log
plugins     = superlance

programs =
    10 postgres ${postgresql:location}/bin/postgres [-D ${buildout:postgres-datadir}/var/data] ${buildout:directory} true
    20 zeoserver ${zeoserver:location}/bin/runzeo ${zeoserver:location} true
    30 instance1 ${buildout:directory}/bin/instance1 [console] ${instance1:location} true
    40 instance2 ${buildout:directory}/bin/instance2 [console] ${instance2:location} true
    50 haproxy ${buildout:directory}/bin/haproxy [-f ${buildout:directory}/etc/haproxy.conf -db] ${buildout:directory} true
    
# http://pypi.python.org/pypi/superlance/
# eventlisteners =
#     Memmon TICK_60 ${buildout:bin-directory}/memmon [-p instance1=500MB]
#     Memmon TICK_60 ${buildout:bin-directory}/memmon [-p instance2=500MB]
#     HttpOk TICK_60 ${buildout:bin-directory}/httpok [-p site1 -t 20 http://localhost:8080/]
    

